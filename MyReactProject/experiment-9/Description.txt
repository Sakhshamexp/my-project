Class Hierarchy: Person, Student, and Teacher

CLASS: Person
    Purpose:
        Acts as the base class for all people.
    Attributes:
        - name: Must be a string with only alphabetic characters.
        - age: Must be a positive integer.
    Methods:
        - getDetails(): Returns "Name: [name], Age: [age]".
    Effect:
        Provides shared data and behavior that other classes can extend.

CLASS: Student (inherits Person)
    Purpose:
        Represents a student with additional academic details.
    Extra Attribute:
        - course/grade: String indicating the enrolled program or grade level.
    Methods:
        - getDetails(): Overridden to return "Name: [name], Age: [age], Course: [course]".
    Effect:
        Extends Person with student-specific information.

CLASS: Teacher (inherits Person)
    Purpose:
        Represents a teacher with subject expertise.
    Extra Attribute:
        - subject/department: String representing the subject taught.
    Methods:
        - getDetails(): Overridden to return "Name: [name], Age: [age], Subject: [subject]".
    Effect:
        Extends Person with teacher-specific information.

IMPLEMENTATION OUTLINE
    - Define a Person class with name, age, and a getDetails() method.
    - Create a Student subclass:
        * Inherits name and age.
        * Adds course/grade property.
        * Redefines getDetails() to include the course.
    - Create a Teacher subclass:
        * Inherits name and age.
        * Adds subject/department property.
        * Redefines getDetails() to include the subject.
    - Instantiate Student and Teacher objects to demonstrate inheritance and method overriding.

LEARNING TAKEAWAYS
    - Built a reusable base class in JavaScript using ES6 syntax.
    - Understood inheritance and how subclasses extend a parent class.
    - Practiced method overriding to tailor subclass behavior.
    - Strengthened understanding of object-oriented programming concepts in JavaScript.
